# agent.conf
# 
# ExecutorAgent  options:
# ----------------------- 
# defaultkey <key>
# 
#   Set's the default key for ALL allowed hosts to <key>.
#   The default key is used when no other key is specified in an ACCEPT option.
#   You have to use the same key in the airsexecutor.conf file. If the keys, or passwords if you will, don't 
#   match, Executor Agent can not decrypt the response action request from AIRSExecutor and ignore it.
# 
#   Example:   defaultkey mydefaultpassword
# 
#   If omitted, Executor Agent will use a default key (in which case it would have to
#   omitted in airsexecutor.conf as well).
# 
#                          
port 34000 
# port <port>               
# 
#   This set's the listening port to <port>. 
# 
#   Example:   port 666
#   It defaults to 898 if this line is omitted.
# 
# accept <host>/<mask>,<key>
# 
#   This option lists AIRS Executors that Executor Agent is accepting packets from.
#   You can specify hostname, IP address, IP address and network mask, and
#   optionally an encryption key used configured for that host or network.
# 
#   Examples:  accept 10.10.0.0/16, officepassword
#              accept snort1, hostpassword
accept 127.0.0.1, m1p455w0rd
#                          
#   If the password is omitted, the default key specified with DEFAULTKEY will
#   be used. You can only specify one host per line, but you can supply 
#   unlimited lines.
# 
# 
# 
# keyinterval <time>
# 
#   This causes the Executor Agent to request/create a new encryption key every <time>.
#   If this line is omitted, the key lifetime defaults to 4 hours. You can use
#   'hours', 'days', 'months', 'weeks', 'years' in the duration.
# 
#   Example:   keyinterval 30 minutes
# 
# 
# 
# dontexecute <host>/<mask>
# dontundoexecute <host>/<mask>
# 
#   This adds the host or network to the white-list of hosts/networks that will
#   never be executed or undo a Response Action. Execution or undo execution request for hosts
#   on this list are ignored.
# 
#   Examples:  dontexecute a.root-servers.net
#              dontundoexecute 192.168.10.0/24
# 
#   Only one host/network per line can be specified, but you can list unlimited
#   lines
# 
dontexecute 192.168.100.130
dontexecute 192.168.100.140
dontexecute 10.0.3.131
dontexecute 10.0.3.132
# 
# 
# onlyexecute <host>/<mask>
# onlyundoexecute <host>/<mask>
#
#   If this is specified, Executor Agent will only execute a response action
#   over IP address that match this
#   list of IP's or networks. All other response action requests are ignored. The same
#   applies to undo execution if the "onlyundoexecute" keyword is specified. Uses for
#   the latter might be limited, but it's available. DONTEXECUTE still applies
#   within this list.
#
#   Examples:  onlyexecute 10.0.0.0/8
#
#   Only one host/network per line can be specified, but you can list unlimited
#   lines
#
#
#
# override <host>/<mask>,<time>
# 
#   Each AIRS Executor requests its own time interval for the Response Action request.
#   Here on the Executor Agent, you can override the duration with a specified value.
#   This is good for proxy servers, or other situations, where an attacker
#   'shares' an IP address with other hosts/users that you don't want to
#   execute response action for long. (You don't want to execute ALL of AOL for a week... :)
# 
#   Examples:  override proxy.aol.com, 5 min
#              override 192.168.1.0/24, 10 sec
# 
# 
# 
# upperlimit <host>/<mask>,<time>
# limit <host>/<mask>,<time>
#
#   This statement allows you to set a maximum time duration for all requests
#   dependent on the AIRS Executor. It acts like 'override', but instead of
#   setting a new duration, this statement limits the duration to the defined
#   maximum blocktime. Note that the host/network refers to an AIRS Executor
#   (or a forwarding Executor Agent station) and does not refer to the IP address which
#   over a response action will be executed like 'override' does.
#   
#   Example:   limit 192.168.1.0/24, 2 weeks
#   
#   
#
# lowerlimit <host>/<mask>,<time>
# atleast <host>/<mask>,<time>
# 
#   This statement allows you to set a minimum time duration for all requests
#   dependent on the AIRS Executor. It is the complement to 'limit', but
#   instead of reducing the duration to a maximum limit, it bumps up any 
#   duration that is lower to this minimum duration.
#   
#   Example:   lowerlimit 192.168.1.0/24, 1 day
#
#
#
# denysidfrom <host>/<mask>: <sid>,<sid>,...
#
#   This statement causes Snortsam to ignore response action requests for particular
#   SID based on a given IDS. Either a single SID or multiple SIDs can be
#   listed. When listing multiple SIDs, make sure you separate them with commas
#   and not just spaces. 
#
#   Examples:  denysidfrom 192.168.1.0/24: 1345
#              denysidfrom othersnortsam.someone.net: 1411, 1422, 0, 2002123
#              
#
#
#
# allowsidfrom <host>/<mask>: <sid>,<sid>,...
#
#   This statement is the invert of 'denysidfrom'. It will cause Executor Agent to 
#   only accept the SIDs listed and by default ignore all other SIDs.
#   If a conflict exist by the same SID appearing in an 'allowsidfrom' line and
#   a 'denysidfrom' line, the deny takes priority.
#   
#   Example:   allowsidfrom 10.0.0.0/8: 3200, 3201, 3203, 4332, 4333, 4334
#
#
#
# rollbackhosts <amount>
# 
#   This tells Executor Agent to keep a record of <amount> last requests for each 
#   AIRS Executor. These requests will be rolled back, meaning the hosts 
#   on which undoes a response action, in the event that the requests threshold is exceeded.
# 
#   Example:   rollbackhosts 50
# 
#   If omitted, Executor Agent will not keep a record of the IP addresses that have 
#   been blocked for rollback purposes.
# 
# 
# 
# rollbackthreshold <amount> / <time>
# 
#   This specifies the execution response-action threshold. If the threshold is exceeded (more 
#   than <amount> response action requests in <time>), the Executor Agent will undo response actions the last 
#   <x> hosts specified by the ROLLBACKHOSTS statement.
# 
#   Example:   rollbackthreshold 20 / 30 secs
# 
#  
# 
# rollbacksleeptime <time>
# 
#   When the rollback threshold has been exceeded, Executor Agenr will ignore 
#   response actions requests until the level drops back below the threshold. Using 
#   this option you can specify an additional time period that Executor Agent will
#   wait until it starts acting on response actions requests again.
# 
#   Example:   rollbacksleeptime 1 minute
# 
#   If omitted, and the rollback mechanism is used, it defaults to 15 minutes.
# 
# 
# 
# skipinterval <time>          
# 
#   Executor Agent skips repetitive, identical response actions requests (for performance 
#   reasons). Here you specify the time interval for which requests are 
#   considered repetitive.
# 
#   Example:   skipinterval 30 secs
# 
#   If omitted, executor agent will use a default time period of 10 seconds in which
#   it considers requests to be repetitive.
# 
# 
# 
# skiphosts <amount>
# 
#   Tells Executor Agent how many hosts it should remember for repetitive block 
#   checks.
# 
#   Example:   skiphosts 10
# 
#   If omitted, Executor Agent will remember a default of 10 hosts.
# 
# 
# 
# logfile <filename>
# 
#   Executor Agent will use this file to log certain events such as program start,
#   execute/undo actions performed and error events. If only a file name is
#   specified (without a path), the file will be created a) on Windows systems
#   in the same directory where SnortSam.exe resides, and b) on Unix systems
#   in /var/log.
# 
#   Example:   logfile snortsam.log
#
#   No logging occurs if this line is omitted.
logfile /var/log/executoragent.log
# 
# 
# loglevel <level>
# 
#   The file logging level can be set to 0, 1, 2, or 3:
#      0: Quiet - No logging occurs.
#      1: Sparse - Only errors are logged.
#      2: Normal - Errors and response actions executions are logged.
#      3: Verbose - Additional information (such as connections/disconnections)
#         are logged as well.
# 
#   Example:   loglevel 2
loglevel 3
# 
#   If omitted, a level of 2 (normal logging) is assumed.
# 
# 
#
# screenlevel <level>
#
#   The logging level, just like loglevel, but for screen output.
#     (See above for values)
#
#   Example:   screenlevel 3
#
#   If omitted, a level of 2 (normal logging) is assumed.
#
#
# 
# include <file>
# 
#   This statement includes another configuration file. Only one level of 
#   inclusion is supported.
# 
#   Example:   include dontblocklist.cfg
# 
# 
#
# statefile <filename>
#
#   Executor Agent will use this file name for the state file instead of the default.
#   This avoids conflicts on hosts with mutliple Executor Agents instances.
#
#   The default of /var/db/snortsam.state (or snortsam.sta on Windows) is used
#   if this line is omitted.
#
#   Example:   statefile /var/db/2nd-snortsam.state
#
#
#
# avoidstatefile
# 
#   Starting with version 2.8, Executor Agent will always keep a state file so the
#   additions to dontexecute-list can be checked against current response actions executed
#   (and response actions undoing automatically if a host is on the DONTEXECUTE list, but had been 
#   executed before). If you are using SnortSam only to block on Checkpoint
#   firewalls, you could avoid the state file since FW-1 will time-out blocks 
#   by itself. To do that, just use this statement in the config file.
# 
#   Example:   avoidstatefile
# 
#   Note that if you load a plugin that requires SnortSam to unblock the
#   blocks, and thus requires the state file, it will be created regardless if
#   this option is present.
# 
# 
# 
# disablereverselookups
#
#   This option turns off reverse name resolution in logging plugins, currently
#   only used by the email plugin.
#
#   Example:   disablereverselookups
#
#
#
# disablepersistentconnections
# disablepersistenttcp
#
#   This option turns off persistent TCP connections for the FORWARD plugin as
#   introduced with version 2.51. It also does not use persistent connections
#   for connecting hosts like the Snort plugin, a remote forwarder, or the
#   samtool. In essence, Snortsam will behave like pre-2.51 versions.
#   The default is now to leave persistent-TCP disabled. See also below.
#   
#   Example:   disablepersistentconnections
#
#
#
# enablepersistentconnections
# enablepersistenttcp
#
#   This option turns on persistent TCP connections for the FORWARD plugin as
#   introduced with version 2.51. It also accepts persistent connections from
#   connecting hosts like the Snort plugin, a remote forwarder, or the samtool.
#   In essence, Snortsam will behave like pre-2.51 versions.
#    
#   By default, persistens TCP connections are disabled now, and you need this
#   option to forcefully enable it. Beware, persistent TCP connections are 
#   still experimental and may cause problems.
#
#   Example:   enablepersistentconnections
#
#
#
# disableseqnocheck
# 
#   This option turns off sequence number checking in executor agent. SeqNo 
#   violations are currently not punished (by banning the offending Snort 
#   sensor), but it was planned to do so in the future to increase security.
#   Use this option to turn packet sequence number checking off.
# 
#   Example:   disableseqnocheck
# 
# 
# 
# holdsnort
# 
#   This option requires version 1.13 or higher of the Snort plugin. It places
#   AIRS Executor 'on hold' during processing of the blocking request, and resumes
#   AIRS Executor once the block is completed.
# 
#   Example:   holdsnort
# 
#   THIS WILL SLOW SNORT DOWN! USE ONLY FOR TESTING OR IN CONJUNCTION WITH 
#   BARNYARD!
# 
# 
# 
# nothreads                 
# 
#   This option disables the multi-threading capability and causes Executor Agent 
#   not to use thread functions at all. Instead, all plugins are executed 
#   sequentially within the main process. This makes Executor Agent behave like the
#   old, single-threaded version 1. It is useful for testing, or if you 
#   encounter problems with plugins that have problems with POSIX threads.
# 
#   Example:   nothreads
# 
#
# 
# forcethreads                 
#
#   This option forces use of multi-threading capability on systems that have
#   it disabled by default, which currently is all Linux versions.
#   
#   Example:   forcethreads
#
#
#
# daemon                 
# 
#   This option causes Executor Agent to turn into a daemon upon startup. It is 
#   similar to the -D option of many other tools and services.
# 
#   Example:   daemon
# 
# 
# 
# bindip
# 
#   This option causes Executor Agent to bind only to one IP address (or interface)
#   instead of listening on all interfaces/addresses.
# 
#   Example:   bindip 192.168.0.1
# 
# 
# 
# 
# ResponseAcition specific options:
# --------------------------
# hnvnx <pathFile><user>
# 
#   If specified, ExecutorAgent will call the VNX Tool (Virtual Network Over Linux) 
#   and it will deploy a virtual scenario with a HoneyNet. You have to specify the
#   XML Path File which configure a virtual HoneyNet. Also you could specify a user
#   who perform the command, if you don't specify the user the plugin will use the
#   "root" user. 
# 
#   Examples:  hnvnx /usr/share/vnx/examples/honeynet.xml 
#              hnvnx /usr/share/vnx/examples/honeynet.xml vnxUser
hnvnx /usr/share/vnx/examples/honeynet1.xml root
# ipt-block <adapter> <logoption>
# 
#   This plugin will call the iptables executable in order to block the host by
#   adding a rule to the active rule set. You have to specify the adapter to 
#   block on (for example, eth0) and you can add additional information to send an
#   e-mail to SMPT Server.
# 
#   Example:   ipt-block eth0 10.1.1.2:25 admin@upm.es ids@upm.es
# 
#ipt-block eth0
ipt-block NetATT
# email <smtpserver>:<port> <recipient> <sender>
# 
#   This statement sends an email for every execution and undo-exection Response Action. 
#   You specify your SMTP server by name or IP address, and the email address you
#   want to send the notification to. Only one recipient per line is supported,
#   more than one line be be specified. By default, ExecutorAgent will send the
#   email from admin@<alumnos.upm.es>, but you can override the sender by adding
#   a specific sender after the recipient. Also, you can optionally specify
#   a custom port in case you run SMTP on a different port. (Default is 25)
# 
#   Example:   email mailserver.mydom.com root@mydom.com
#              email 127.0.0.1 admin@mydom.com SnortSam@mydom.com
#email 192.168.1.8:25 danny.guamanl@gmail.com admin@alumnos.upm.es
email 192.168.100.130:25 miguel.rod.lav@gmail.com admin@alumnos.upm.es
# 			  
# 
# 
# email-blocks-only <smtpserver>:<port> <recipient> <sender>
#
#   This statement is the same as "email" except that it only sends emails for
#   execution of Response Actions, not undo-execution events. This was easier 
#   to implement as a plugin since "email" requires the creation of a state file while 
#   "email-blocks-only" does not (see also "avoidstatefile").
#
#   Example:   email-execution-only mailserver.mydom.com root@mydom.com
email-execution-only 192.168.100.130:25 miguel.rod.lav@gmail.com admin@alumnos.upm.es
#
#
# 
# 
# ciscoacl <ip> <telnetpw> <enablepw> <acl_filename>|[tftp_ip]: <acl_interface> <acl_type> <acl_name>
# 
#   This statement tells Executor Agent to use the Cisco ACL plugin to block IP's on
#   a Cisco router. The Executor Agent will telnet into router at address <ip>, log in 
#   with the <telnetpw> as the password at the telnet prompt <enablepw>. 
#   You need to supply your baseline configuration file <acl_filename> in the configuration line. 
#   The Executor Agent will insert ACL statements so that access from and to the intruding IP address is denied.
#   This plugin can operate: 1) sending individual ACL commands, in this case you shouldn't
#   provide <tftp_ip>, and; 2) writing commands on file which is contained in TFTP server, in this case you
#   should provide a <tftp_ip>.
#   Also after colon you need to provide a interface, type and name of Access List Control.
#  1) If you will not use CISCOACL Plugin then disable TFPT Service and restart the Executor Agent!"
#		" 2) Otherwise, you should run the Executor Agent from TFTP Server Folder (i.e. /var/lib/tftpboot/).
# 
#   Example:   ciscoacl 1.2.3.4 telnetpw enablepw initial-acl.conf|10.1.110.5 : fastEthernet0/1 in AIRS-ACL
#
ciscoacl 10.0.2.1 cisco class | 10.0.13.1 : Ethernet0/1 in AIRS-ACL
#
#
#
# ipt-redirect <ip>[:port][SMTP Information]
# 
#   This plugin will call the iptables executable in order to redirect traffic by
#   adding a rule to the active rule set. You have to specify the IP to 
#   redirect on, and you can add additional information to send to specific port.
#	Also you can specify additional information to send e-mail to SMPT Server.
# 
#   Example:   ipt-redirect eth0 10.1.1.2:25 admin@upm.es ids@upm.es
# 
ipt-redirect 192.168.100.150 
#
#
#
#
# backup-mysql <db_server> <db_user> <db_password> <db_name> <db_backup_file>
#
#   This plugin will call the myslqldump in order to in order to backup the database <db_name>.
#   You have to specify the database server IP, user and password. 
#   Also you need to specify the database name and and the new name with which to save the backup. 
#
#  example: backup-mysql 10.0.0.1 root m1p4a55w0rd users.bd user.bd.bckup
# 
# restore-mysql <db_server> <db_user> <db_password> <db_name> <db_restore_file>
#
#   This plugin will call the myslqldump in order to in order to restore the database <db_name>.
#   You have to specify the database server IP, user and password. 
#   Also you need to specify the database name and and the new name with which to restore the backup. 
#
#  example: restore-mysql 10.0.0.1 root m1p4a55w0rd users.bd user.bd.bckup
#
#
# host-deny <hosts.deny path directory>
#  This plugin adds a new IP to the host.deny file You should provides where is the host.deny file. 
#  Example host-deny /etc
host-deny /etc 
#
#
#cisconullroute
#
# whitelist <agent.conf directory>
#
#  THis plugin adds a new IP to whitelist in agent.conf file.
whitelist /home/danny/Documents/agent-ex.conf
#
#
#
# close-port-linux
#  
# Close an linux port that is sent as parameter.
#
#
#
close-port-linux
#
#
# Close-connection linux
# Close all connections realated with an attacker
#
close-connection-linux
#
# upload-backup-ftp <ftp server> <user> <password> <source_file> <destination_directory>
#
#   This plugin upload <soucefile> to <destination_directory> in a FTP Server
#
upload-backup-ftp localhost santiago santiago8 /var/www/index.html ./
# 
# download-backup-ftp <ftp server> <user> <password> <source_file> <destination_directory>
#
#   This plugin download <source-file> from FTP server to <destination_directory> 
#
download-backup-ftp localhost santiago santiago8 ./index.html /var/www/
#
#
#  disable-user 
#
#  This plugin disable an user account sent as parameter
# 
#  Example: disable-user
disable-user 
